version: '3'

x-backend-base: &backend-base
  image: python:3.9

services:

  frontend:
    labels:
      shipyard.route: '/'
    build: 'frontend'
    environment:
      CI: 'true'
      DANGEROUSLY_DISABLE_HOST_CHECK: 'true'
    env_file:
      - frontend/frontend.env
    volumes:
      - './frontend/src:/app/src'
      - './frontend/public:/app/public'
    ports:
      - '3000:3000'

  backend:
    labels:
      shipyard.route: '/api'
    build: 'backend'
    environment:
      DATABASE_URL: 'postgres://obscure-user:obscure-password@postgres/app'
      DEV: ${DEV}
      FLASK_DEBUG: '1'
      LOCALSTACK_HOST: 'localstack'
    volumes:
      - './backend/filesystem/entrypoints:/entrypoints:ro'
      - './backend/migrations:/srv/migrations'
      - './backend/src:/srv/src:ro'
    ports:
      - '8080:8080'

  worker:
    labels:
      shipyard.init: 'poetry run flask db upgrade'
    build: 'backend'
    environment:
      DATABASE_URL: 'postgres://obscure-user:obscure-password@postgres/app'
      DEV: ${DEV}
      FLASK_DEBUG: '1'
      LOCALSTACK_HOST: 'localstack'
    command: '/entrypoints/worker.sh'
    volumes:
      - './backend/filesystem/entrypoints:/entrypoints:ro'
      - './backend/migrations:/srv/migrations'
      - './backend/src:/srv/src:ro'

  postgres:
    image: 'postgres:9.6-alpine'
    labels:
      shipyard.init: "chown -R 10001:10001 /var/lib/postgresql/data/pgdata"
      shipyard.init.container: "true"
      shipyard.init.container.image: busybox
    environment:
      POSTGRES_USER: 'obscure-user'
      POSTGRES_PASSWORD: 'obscure-password'
      POSTGRES_DB: 'app'
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - '5432'

  redis:
    image: 'redis:5.0-alpine'
    ports:
      - '6379'

  python-migrate:
    <<: *backend-base
    labels:
      shipyard.job: true
    command: >
      sh -c 'echo "[DeprecationWarning] The use of legacy migration strategy is deprecated.";
      echo "Traceback (most recent call last):";
      echo "  File \"manage.py\", line 22, in <module>";
      echo "    execute_from_command_line(sys.argv)";
      echo "  File \"/usr/local/lib/python3.9/site-packages/django/core/management/__init__.py\", line 394, in execute_from_command_line";
      echo "    utility.execute()";
      echo "  File \"/usr/local/lib/python3.9/site-packages/django/core/management/__init__.py\", line 388, in execute";
      echo "    django.setup()";
      echo "  File \"/usr/local/lib/python3.9/site-packages/django/__init__.py\", line 24, in setup";
      echo "    apps.populate(settings.INSTALLED_APPS)";
      echo "django.db.migrations.exceptions.MigrationError: Migration failure: current transaction is aborted, commands ignored until end of transaction block";
      exit 1'
    depends_on:
      - postgres
      - redis
      
  localstack:
    image: 'localstack/localstack:2.3.0'
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range

volumes:
  postgres:
  localstack:
