on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Fetch random words
    steps:
      - uses: boonya/gh-action-name-generator@v1
        id: word1
        with:
          length: 1
          style: lowerCase
      - uses: boonya/gh-action-name-generator@v1
        id: word2
        with:
          length: 1
          style: lowerCase
      - uses: boonya/gh-action-name-generator@v1
        id: word3
        with:
          length: 1
          style: lowerCase
      - uses: boonya/gh-action-name-generator@v1
        id: word4
        with:
          length: 1
          style: lowerCase
      - uses: boonya/gh-action-name-generator@v1
        id: word5
        with:
          length: 1
          style: lowerCase
      - name: Checkout
        uses: actions/checkout@v4
      - name: Integrate Shipyard
        uses: shipyard/shipyard-action@1.0.0
        with:
          api-token: ${{ secrets.SHIPYARD_API_TOKEN }}
          timeout-minutes: "10"
      - name: Print Env Data
        run: |
          export CYPRESS_BASE_URL=${SHIPYARD_ENVIRONMENT_URL}
          export CYPRESS_BYPASS_TOKEN=${SHIPYARD_BYPASS_TOKEN}
          env | grep -e SHIPYARD -e CYPRESS
        shell: bash
      - run: mkdir test-bucket
        shell: bash
      - name: Search GIFs and save result
        id: search_word1
        uses: fjogeleit/http-request-action@v1
        with:
          url: '${{ env.SHIPYARD_ENVIRONMENT_URL }}/api/v1/gif-search?q=${{ steps.word1.outputs.name }}&shipyard_token=${{ env.SHIPYARD_BYPASS_TOKEN }}&giphy_api_key=${{ secrets.GIPHY_API_KEY }}'
          method: 'POST'
      - name: Retrieve first GIF from search
        run: curl -o '${{ fromJson(steps.search_word1.outputs.response).s3Paths[0] }}' '{{ env.SHIPYARD_ENVIRONMENT_URL }}/${{ fromJson(steps.search_word1.outputs.response).s3Paths[0] }}?shipyard_token=${{ env.SHIPYARD_BYPASS_TOKEN }}'
      #- name: Retrieve first GIF from search
      #  uses: fjogeleit/http-request-action@v1
      #  with:
      #    url: '${{ env.SHIPYARD_ENVIRONMENT_URL }}/${{ fromJson(steps.search_word1.outputs.response).s3Paths[0] }}?shipyard_token=${{ env.SHIPYARD_BYPASS_TOKEN }}'
      #    method: 'GET'
      #    contentType: image/gif
      #    responseFile: '${{ fromJson(steps.search_word1.outputs.response).s3Paths[0] }}'
      - name: Save image
        uses: actions/upload-artifact@v4
        with:
          name: "${{ steps.word1.outputs.name }} image #1"
          path: '${{ fromJson(steps.search_word1.outputs.response).s3Paths[0] }}'
          compression-level: 0
